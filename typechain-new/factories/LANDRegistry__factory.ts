/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { LANDRegistry, LANDRegistryInterface } from "../LANDRegistry";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "",
        type: "address",
      },
      {
        name: "",
        type: "address",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "ping",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "landIds",
        type: "uint256[]",
      },
      {
        name: "operator",
        type: "address",
      },
    ],
    name: "setManyUpdateOperator",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "value",
        type: "uint256",
      },
    ],
    name: "decodeTokenId",
    outputs: [
      {
        name: "",
        type: "int256",
      },
      {
        name: "",
        type: "int256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "landId",
        type: "uint256",
      },
    ],
    name: "updateOperator",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "assetId",
        type: "uint256",
      },
      {
        name: "operator",
        type: "address",
      },
    ],
    name: "setUpdateOperator",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "x",
        type: "int256",
      },
      {
        name: "y",
        type: "int256",
      },
      {
        name: "data",
        type: "string",
      },
    ],
    name: "updateLandData",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class LANDRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): LANDRegistryInterface {
    return new utils.Interface(_abi) as LANDRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LANDRegistry {
    return new Contract(address, _abi, signerOrProvider) as LANDRegistry;
  }
}
