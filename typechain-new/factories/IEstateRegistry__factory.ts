/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IEstateRegistry,
  IEstateRegistryInterface,
} from "../IEstateRegistry";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        name: "_owner",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "metadata",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        name: "_estateId",
        type: "uint256",
      },
      {
        indexed: false,
        name: "_data",
        type: "string",
      },
    ],
    name: "CreateEstate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_estateId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "_landId",
        type: "uint256",
      },
    ],
    name: "AddLand",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_estateId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "_landId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "_destinatary",
        type: "address",
      },
    ],
    name: "RemoveLand",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_assetId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "_holder",
        type: "address",
      },
      {
        indexed: true,
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        name: "_data",
        type: "string",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_estateId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "_operator",
        type: "address",
      },
    ],
    name: "UpdateOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        name: "_caller",
        type: "address",
      },
      {
        indexed: false,
        name: "_approved",
        type: "bool",
      },
    ],
    name: "UpdateManager",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_registry",
        type: "address",
      },
    ],
    name: "SetLANDRegistry",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_previousEstateLandBalance",
        type: "address",
      },
      {
        indexed: true,
        name: "_newEstateLandBalance",
        type: "address",
      },
    ],
    name: "SetEstateLandBalanceToken",
    type: "event",
  },
];

export class IEstateRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IEstateRegistryInterface {
    return new utils.Interface(_abi) as IEstateRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEstateRegistry {
    return new Contract(address, _abi, signerOrProvider) as IEstateRegistry;
  }
}
