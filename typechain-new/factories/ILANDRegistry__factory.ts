/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ILANDRegistry, ILANDRegistryInterface } from "../ILANDRegistry";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "x",
        type: "int256",
      },
      {
        name: "y",
        type: "int256",
      },
    ],
    name: "ownerOfLand",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "x",
        type: "int256",
      },
      {
        name: "y",
        type: "int256",
      },
      {
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "assignNewParcel",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "x",
        type: "int256[]",
      },
      {
        name: "y",
        type: "int256[]",
      },
    ],
    name: "ownerOfLandMany",
    outputs: [
      {
        name: "",
        type: "address[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "x",
        type: "int256[]",
      },
      {
        name: "y",
        type: "int256[]",
      },
      {
        name: "data",
        type: "string",
      },
    ],
    name: "updateManyLandData",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "x",
        type: "int256",
      },
      {
        name: "y",
        type: "int256",
      },
      {
        name: "to",
        type: "address",
      },
    ],
    name: "transferLand",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "x",
        type: "int256",
      },
      {
        name: "y",
        type: "int256",
      },
    ],
    name: "landData",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "x",
        type: "int256[]",
      },
      {
        name: "y",
        type: "int256[]",
      },
      {
        name: "to",
        type: "address",
      },
    ],
    name: "transferManyLand",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "ping",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "x",
        type: "int256",
      },
      {
        name: "y",
        type: "int256",
      },
    ],
    name: "encodeTokenId",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "value",
        type: "uint256",
      },
    ],
    name: "decodeTokenId",
    outputs: [
      {
        name: "",
        type: "int256",
      },
      {
        name: "",
        type: "int256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "x",
        type: "int256[]",
      },
      {
        name: "y",
        type: "int256[]",
      },
      {
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "assignMultipleParcels",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "landOf",
    outputs: [
      {
        name: "",
        type: "int256[]",
      },
      {
        name: "",
        type: "int256[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "x",
        type: "int256",
      },
      {
        name: "y",
        type: "int256",
      },
    ],
    name: "exists",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "x",
        type: "int256",
      },
      {
        name: "y",
        type: "int256",
      },
      {
        name: "data",
        type: "string",
      },
    ],
    name: "updateLandData",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_owner",
        type: "address",
      },
      {
        name: "_operator",
        type: "address",
      },
      {
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setUpdateManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "holder",
        type: "address",
      },
      {
        indexed: true,
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        name: "data",
        type: "string",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "operator",
        type: "address",
      },
    ],
    name: "UpdateOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        name: "_caller",
        type: "address",
      },
      {
        indexed: false,
        name: "_approved",
        type: "bool",
      },
    ],
    name: "UpdateManager",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_caller",
        type: "address",
      },
      {
        indexed: true,
        name: "_deployer",
        type: "address",
      },
    ],
    name: "DeployAuthorized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_caller",
        type: "address",
      },
      {
        indexed: true,
        name: "_deployer",
        type: "address",
      },
    ],
    name: "DeployForbidden",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_previousLandBalance",
        type: "address",
      },
      {
        indexed: true,
        name: "_newLandBalance",
        type: "address",
      },
    ],
    name: "SetLandBalanceToken",
    type: "event",
  },
];

export class ILANDRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): ILANDRegistryInterface {
    return new utils.Interface(_abi) as ILANDRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILANDRegistry {
    return new Contract(address, _abi, signerOrProvider) as ILANDRegistry;
  }
}
